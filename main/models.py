from django.db import modelsclass Genre(models.Model):    name = models.CharField(max_length=100)    def __str__(self):        return self.nameclass Collection(models.Model):    name = models.CharField(max_length=200)    poster_path = models.CharField(max_length=200, blank=True, null=True)    backdrop_path = models.CharField(max_length=200, blank=True, null=True)    def __str__(self):        return self.nameclass Movie(models.Model):    title = models.CharField(max_length=100)    overview = models.TextField()    release_date = models.DateField(null=True, blank=True)    genres = models.ManyToManyField(Genre)    runtime = models.PositiveIntegerField()    revenue = models.DecimalField(max_digits=15, decimal_places=2)    budget = models.DecimalField(max_digits=15, decimal_places=2)    poster_url = models.URLField(max_length=200, blank=True, null=True)    tagline = models.CharField(max_length=255, blank=True, null=True)    belongs_to_collection = models.ForeignKey(Collection, null=True, blank=True, on_delete=models.SET_NULL)    adult = models.BooleanField(default=False)    imdb_id = models.CharField(max_length=50, blank=True, null=True)    original_title = models.CharField(max_length=100, blank=True, null=True)    backdrop_url = models.URLField(max_length=200, blank=True, null=True)    def __str__(self):        return self.titleclass Ratings(models.Model):    movie = models.ForeignKey(Movie, on_delete=models.CASCADE)    tmdb_popularity = models.FloatField(blank=True, null=True)    tmdb_vote_average = models.FloatField(blank=True, null=True)    tmdb_vote_count = models.IntegerField(blank=True, null=True)    imdb_rating = models.DecimalField(max_digits=5, decimal_places=2)    imdb_vote_count = models.DecimalField(max_digits=15, decimal_places=0)